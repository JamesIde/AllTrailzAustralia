@page "/trails"
@using DataAccess.Model
@using Repository
@inject ITrailsRepository trailsRepository
@inject NavigationManager NavigationManager

<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-info">Walking Trails Australia</h4>
    </div>
    
</div>

<div class="container-fluid">
    <div class = "row justify-contents-between mb-2">
    <h3>        <NavLink href="@($"trails/create")" class="btn btn-info mr-auto mb-1 ">Add new trail </NavLink>
</h3>
    </div>
<div class="col-5 offset-1">

    </div>    
    <div class = "row">
        <table class="table table-striped table-hover table-sm">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Title</th>
      <th scope="col">Description</th>
      <th scope="col">Distance</th>
      <th scope="col">Days</th>
      <th scope="col">Date Created</th>
      <th scope="col">Date Updated</th>
    </tr>
  </thead>


<tbody>
    @if (!Trails.Any())
    {
        <tr>
            <th scope="row" colspan="5">No trails available, why not add one?</th>
        </tr>

    }
    else
    {
        @foreach (var trail in Trails)
        {

            <tr @onclick="() => RedirectTo(trail.Id)" class="cursor-pointer">

                <th scope="row">@trail.Id</th>
                <td>@trail.Name</td>
                <td>@trail.Distance</td>
                <td>@trail.Days</td>
                <td>@trail.Description</td>
                <td>@trail.DateCreated</td>
                <td>@trail.DateUpdated</td>
            </tr>
        }
    }
  </tbody>
</table>
    </div>
</div>
@code {
    private IEnumerable<Trail> Trails { get; set; } = new List<Trail>();


    protected override async Task OnInitializedAsync()
    {
        Trails = await trailsRepository.GetAll();
    }
    private void RedirectTo(int trailId)
    {
        NavigationManager.NavigateTo($"/trails/details/{trailId}");
    }
}
